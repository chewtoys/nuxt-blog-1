/**
 * @desc 正则格式校验
 * @param value {string} required 校验值
 * @param rules {string | array} required 校验格式：ipv4、ipv4段(ipv4segment)、ipv6、域名(domain)、ipv6段(ipv6segment)
 * @example
 * validateFormat(value, ['ipv4', 'domain'])
 * */

const checkRules = {
  'ipv4': '/^((\\d{1,2}|1\\d\\d|2[0-4]\\d|25[0-5])\\.){3}(\\d{1,2}|1\\d\\d|2[0-4]\\d|25[0-5])$/',
  'ipv4segment': '/^((\\d{1,2}|1\\d{2}|2[0-4]\\d|25[0-5])\\.){3}(\\d{1,2}|1\\d{2}|2[0-4]\\d|25[0-5])([-]{1}(\\d{1,2}|1\\d{2}|2[0-4]\\d|25[0-5]))$|^((\\d{1,2}|1\\d{2}|2[0-4]\\d|25[0-5])\\.){3}(\\d{1,2}|1\\d{2}|2[0-4]\\d|25[0-5])([\\/]{1}(1[6-9]|2[0-9]|3[0-2]))$/',
  'ipv6': '/^([\\da-fA-F]{1,4}:(:)?){3,7}([\\da-zA-Z]{1,4})$|^(\\[){1}([\\da-fA-F]{1,4}:(:)?){3,7}([\\da-zA-Z]{1,4})(\\]){1}(:[0-9]+)?(\\/[\\w- .\\/?%&=]*)?$|^(http(s)?:\\/\\/)+(\\[){1}([\\da-fA-F]{1,4}:(:)?){3,7}([\\da-zA-Z]{1,4})(\\]){1}(:[0-9]+)?(\\/[\\w- .\\/?%&=]*)?$/',
  'ipv6segment': '/^\\s*((([0-9A-Fa-f]{1,4}:){7}([0-9A-Fa-f]{1,4}|:))|(([0-9A-Fa-f]{1,4}:){6}(:[0-9A-Fa-f]{1,4}|((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){5}(((:[0-9A-Fa-f]{1,4}){1,2})|:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){4}(((:[0-9A-Fa-f]{1,4}){1,3})|((:[0-9A-Fa-f]{1,4})?:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){3}(((:[0-9A-Fa-f]{1,4}){1,4})|((:[0-9A-Fa-f]{1,4}){0,2}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){2}(((:[0-9A-Fa-f]{1,4}){1,5})|((:[0-9A-Fa-f]{1,4}){0,3}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){1}(((:[0-9A-Fa-f]{1,4}){1,6})|((:[0-9A-Fa-f]{1,4}){0,4}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(:(((:[0-9A-Fa-f]{1,4}){1,7})|((:[0-9A-Fa-f]{1,4}){0,5}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:)))(%.+)?\\s*(\\/([1-9]\\d{0,1}|1\\d{1}|1[0-1]\\d|12[0-8]))?$/',
  'port': '/^([0-9]|[1-9]\\d|[1-9]\\d{2}|[1-9]\\d{3}|[1-5]\\d{4}|6[0-4]\\d{3}|65[0-4]\\d{2}|655[0-2]\\d|6553[0-5])$/'
};
export const validateFormat = (value, rules) => {
  if (Object.is(typeof rules, 'string')) {
    return eval(checkRules[rules]).test(value)
  } else if (Array.isArray(rules)) {
    return rules.some(val => eval(checkRules[val]).test(value))
  } else {
    throw TypeError('类型错误: string | array');
  }
};

export default validateFormat
